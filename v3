#include <iostream>				// ogarnac biezace menu i klase samochod, zapisy do plikow
#include <conio.h>
//#include <stdio.h>
#include <string.h>

using namespace std;

class samochod
{
	protected:
		int id;
		char marka[20];
		char model[20];
		char silnik;			// B, D, I
		char rok_prod[4];		// rrrr
//		char dt_wypozycz[10];	// rrrr.mm.dd
//		char dt_zwrotu[10];		// rrrr.mm.dd
		bool dziala;			// 1 tak
		bool dostepne;			// 1 tak
	public:
			 samochod();
		void dodaj(char *mar, char *mod);			//dodaj nowe auto do bazy
//		void wypozycz();		//wypożyczenie auta - TYLKO TE, KTORE DZIALAJA
//		void zworc();			//koniec wypożyczenia - SPRAWDZ STAN POJAZDU
		void usun();
		void wypisz();
};
// -------------------------------------
/*
samochod::samochod(int id, char *mar, char *mod, char sil, bool dzi, bool dos)
{
	id++; strcpy(marka, mar); strcpy(model, mod); silnik = sil; dziala = dzi; dostepne = dos;
}

samochod::samochod()
{
	id++; strcpy(marka, "BMW"); strcpy(model, "X300"); silnik = 'D'; dziala = 1; dostepne = 1;
}*/

//--------------------------------------


class baza:public samochod
{
	protected:
			samochod *tab;
		int rozmiar;
		int licznosc;
		int current;
	private:
			int i;
	public:
			 baza(int roz);
		void delAll();
		void showAll();
		void newItem(char *mar, char *mod);
		void setCurrent(int index);
		void showCurrent();
		void delCurrent();
		void showNext();
		void showPrev();
		void saveFile();
		void readFile();
};

// --------------------------------------- METODY ----------------------------------------------------
samochod::samochod()
{
	strcpy(marka, "BMW");
	strcpy(model, "GTX");
}

void samochod::usun()
{
	strcpy(marka," ");
	strcpy(model," ");
}

void samochod::dodaj(char *marka, char *model)
{
	strcpy(marka, marka);
	strcpy(model, model);
}

void samochod::wypisz()
{
	cout << marka << " " << model << endl;
}
// ***************************************************************************************************
baza::baza(int roz)
{
	rozmiar = roz;
	tab = new samochod[rozmiar];
	for(i=0; i < rozmiar; i++)
		tab[i].usun();
	licznosc = 0;
}

void baza::delAll()
{
	for (i=0; i < rozmiar; i++)
		tab[i].usun();
	licznosc = 0;
}

void baza::newItem(char *mar, char *mod)
{
	if(licznosc < rozmiar)
	{
		tab[licznosc].dodaj(mar,mod);
		licznosc++;
	}
}

void baza::showAll()
{
	for (i=0; i < rozmiar; i++)
		tab[i].wypisz();
}

// ---------------------------------------------------------------------------------------------------
main()
{
	char opcja, mar[20], mod[20];
	int rozmiar=10;				//tymczasowo na sztywno
	
	cout << "Witaj w programie!" << endl;
	baza baz(rozmiar);
	samochod auto1;

//	auto1.dodaj(1);
//cout << endl << "wypisanie: ";
//	auto1.wypisz();

	do
	{
		cout << endl << "1 - Szukaj auta" << endl;
		cout << "2 - Wypozycz auto (bezposrednio)" << endl;
		cout << "3 - Zwrot auta (bezposrednio)" << endl;
		cout << "4 - Dodaj nowe auto do bazy" << endl;
		cout << "5 - Usun auto z bazy" << endl;
	//	cout << "6 - Wyswietl wszystko" << endl;
		
		cout << "q - koniec programu" << endl << endl;
		
		opcja = getch();
		switch(opcja)
		{
			case '1' : cout << "Kryteria wyszukiwania:"<<endl;		
				// --------------------- podmenu --------------------------------
				{
					cout << "1 - wyswietl wszystko\t\t";
					cout << "2 - podaj marke\t\t";
					cout << "3 - podaj model\n";
					
					char podmenu;
					podmenu=getch();
					switch(podmenu)
					{
						case '1' : baz.showAll();
							break;
					}
				}//---------------------------------------------------------------
				break;
			case '2' : cout << "Wypozyczenie auta:"<<endl;				//bezposrednia edycja
				break;
			case '3' : cout << "Zwrocenie auta:"<<endl;					//bezposrednia edycja
				break;
			case '4' : cout << "Dodajemy do bazy nowe auto:"<<endl; 	//bezposrednie dodanie auta do bazy
				cout << "Marka: ";gets(mar);
				cout << "\nModel: ";gets(mod);
				baz.newItem(mar,mod);
				break;
			case '5' : cout << "Usuniecie pojazdow:"<<endl;				
				break;
	//		case '6' : cout << "Znajdz pojazd:"<<endl;					// lista (baza) pojazdow - spelniajacych warunki ...
		
			// --------------------- pod menu - WYSZUKIWANIE
		/*		{
					cout << "1 - ID";
					cout << "\t\t\t2 - MARKA";
					cout << "\t\t3 - MODEL";
					cout << "\n4 - SILNIK";
					cout << "\t\t5 - ROK PRODUKCJI";
					cout << "\t6 - DATA WYPOZYCZENIA";
					cout << "\n7 - DATA ZWROTU";
					cout << "\t\t8 - CZY ODDANY";		//wypozyczony / dostepny
					cout << "\t\t9 - STAN POJAZDU";		//dzialajacy / nie
					cout << endl;
					
					char menu;
					menu=getch();
					switch(menu)		//jak zrobic zeby wygodnie wprowadzic dane, a te ktore chcemy pominac, przeklikac enterem?
					{
						case '1' : cout <<"test - ID"<<endl;
						case '2' : cout <<"test - MARKA"<<endl;
					}
					cout << "\t\tTEST - potwierdzenie i wyswietlenie"<<endl;
					//------------------- pod menu - DODANIE, WYPOZYCZENIE, ZWROT
				}
				break;*/
			// --------------------------------------------------------------------------------------------------------------
			case 'q' : 
				char zapisz;
				bool wyjscie = 0;
				do
				{
					cout << "Czy zapisac wprowadzone zmiany? (Y/N): "<< endl;		// opcja zapisz jako
					zapisz = getch();
					if(zapisz == 'Y' or zapisz == 'y')
					{
						cout << "zapisano"<< endl;
						wyjscie = 1;
					}
					else if(zapisz == 'N' or zapisz == 'n')
					{
						cout << "nie zapisano"<< endl;
						wyjscie = 1;
					}
					else
					{
						cout << "Wprowadzono zly znak!" << endl;
					}
				}while(!wyjscie);
					cout<<"Do widzenia"<<endl;
		}
	}while(opcja!='q');
	return 0;
}
